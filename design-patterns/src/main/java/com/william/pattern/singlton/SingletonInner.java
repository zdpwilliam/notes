package com.william.pattern.singlton;

/**
 * Created by william.zhang on 2015/10/29.
 */
public class SingletonInner {

	/** 
     * 类级的内部类，也就是静态的成员式内部类，该内部类的实例与外部类的实例 
     * 没有绑定关系，而且只有被调用到才会装载，从而实现了延迟加载 
     */  
    private static class SingletonHolder{
        /**
         * 静态初始化器，由JVM来保证线程安全 
         */
        private static SingletonInner instance = new SingletonInner();
    }
    /** 
     * 私有化构造方法 
     */  
    private SingletonInner(){
    }
    
    public static  SingletonInner getInstance(){  
        return SingletonHolder.instance;  
    }  
}
